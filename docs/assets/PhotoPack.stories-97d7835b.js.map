{"version":3,"file":"PhotoPack.stories-97d7835b.js","sources":["../../src/components/PhotoPack/stories/docs/component.md?raw","../../src/components/PhotoPack/stories/docs/quickit.md?raw","../../src/components/PhotoPack/stories/docs/missingAltText.md?raw","../../src/components/PhotoPack/PhotoPack.svelte","../../src/components/PhotoPack/docProps.ts","../../src/components/PhotoPack/PhotoPack.stories.svelte"],"sourcesContent":["export default \"The `PhotoPack` component makes simple photo grids with custom layouts at whatever breakpoint you need.\\n\\n```html\\n<script>\\n  import { PhotoPack } from '@reuters-graphics/graphics-components';\\n\\n  const images = [\\n    {\\n      src: 'https://...',\\n      altText: 'Alt text',\\n      caption: 'Lorem ipsum. REUTERS/Photog',\\n      // Optional max-height of image across all layouts\\n      maxHeight: 800,\\n    },\\n    // ...\\n  ];\\n\\n  const layouts = [\\n    {\\n      // Breakpoint above which this layout applies\\n      breakpoint: 450,\\n      // Number of photos in each row of this layout, adding up to the total number of images\\n      rows: [1, 2, 1],\\n    },\\n    { breakpoint: 750, rows: [1, 3] },\\n  ];\\n</script>\\n\\n<PhotoPack images=\\\"{images}\\\" layouts=\\\"{layouts}\\\" />\\n```\\n\\n`images` are defined with their src, alt text, captions and an optional `maxHeight`, which makes sure the image is no taller than that height in pixels in any layout.\\n\\n`layouts` describe how those images will be laid out in rows at different breakpoints. The default layout (mobile-first) is each photo on its own row, stacked vertically, but you can group photos into `rows` above a `breakpoint` by specifying the number of photos that should go in that row. For example:\\n\\n```javascript\\n{\\n  breakpoint: 450,\\n  rows: [1,2,1],\\n}\\n```\\n\\n... tells the component that when the `PhotoPack` container is 450 pixels or wider, it should group the 4 photos in 3 rows, 1 in the first, 2 in the second and 1 in the last.\\n\\nYou can define as many layouts for as many images as you like.\\n\"","export default \"Setup your Google Doc with the images, layouts and other props you want:\\n\\n```yaml\\n# Google doc block\\nType: photo-pack\\nID: my-photo-pack\\nClass: mb-2 # adjust margin class as needed\\nWidth: wide\\nCaptionWidth: normal\\nGap: 10\\n[.Images]\\n  Src: images/my-img-1.jpg\\n  AltText: Alt text\\n  Caption: Lorem ipsum. REUTERS/Photog\\n  MaxHeight: 600 # Optional max-height\\n\\n  Src: images/my-img-2.jpg\\n  AltText: Alt text\\n  Caption: Lorem ipsum. REUTERS/Photog\\n\\n  Src: images/my-img-3.jpg\\n  AltText: Alt text\\n  Caption: Lorem ipsum. REUTERS/Photog\\n\\n  Src: images/my-img-4.jpg\\n  AltText: Alt text\\n  Caption: Lorem ipsum. REUTERS/Photog\\n\\n  Src: images/my-img-5.jpg\\n  AltText: Alt text\\n  Caption: Lorem ipsum. REUTERS/Photog\\n[]\\n[.Layouts]\\n  Breakpoint: 750\\n  Rows: 2,3 # Must add to total number of images!\\n\\n  Breakpoint: 450\\n  Rows: 1,2,2\\n[]\\n```\\n\\nIn your project, you can use the `getPhotoPackPropsFromDoc` utilty to easily convert the GoogleDoc format above into the props the `PhotoPack` component expects.\\n\\n```html\\n<!-- App.svelte -->\\n<script>\\n  import {\\n    getPhotoPackPropsFromDoc,\\n    PhotoPack,\\n  } from '@reuters-graphics/graphics-components';\\n\\n  // These should be already imported for you.\\n  import content from '$locales/en/content.json';\\n  import { assets } from '$app/paths';\\n</script>\\n\\n{#each content.blocks as block} {#if block.Type === 'text'}\\n<!-- ... other blocks -->\\n\\n<!-- Copy/paste into your blocks loop! -->\\n{:else if block.Type === 'photo-pack'}\\n<PhotoPack {...getPhotoPackPropsFromDoc(block, assets)} />\\n<!-- END copy/paste -->\\n{/if} {/each}\\n```\\n\"","export default \"If any of your images is missing `altText` a small warning will overlay the photo.\\n\"","<!-- @component `PhotoPack` [Read the docs.](https://reuters-graphics.github.io/graphics-components/?path=/docs/components-PhotoPack--default) -->\n<script lang=\"ts\">\n  interface Image {\n    src: string;\n    altText: string;\n    caption?: string;\n    maxHeight?: number;\n  }\n  /**\n   * Array of image objects\n   * @required\n   */\n  export let images: Image[] = [];\n\n  interface Layout {\n    breakpoint: number;\n    rows: number[];\n  }\n  /**\n   * Array of layout objects\n   * @required\n   */\n  export let layouts: Layout[] = [];\n  /**\n   * Gap between images.\n   * @type {number}\n   */\n  export let gap = 10;\n\n  const random4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  /**\n   * Add an ID to target with SCSS. Should be unique from all other elements.\n   * @type {string}\n   */\n  export let id: string = 'photopack-' + random4() + random4();\n  /**\n   * Add a class to target with SCSS.\n   * @type {string}\n   */\n  export let cls: string = '';\n\n  type ContainerWidth = 'normal' | 'wide' | 'wider' | 'widest' | 'fluid';\n\n  /** Width of the component within the text well. */\n  export let width: ContainerWidth = 'normal';\n  /**\n   * Set a different width for captions within the text well, for example,\n   * \"normal\" to keep captions inline with the rest of the text well.\n   * Can't ever be wider than `width`.\n   * @type {string}\n   */\n  export let captionWidth: ContainerWidth = 'normal';\n\n  import Block from '../Block/Block.svelte';\n  import PaddingReset from '../PaddingReset/PaddingReset.svelte';\n  import { marked } from 'marked';\n\n  let containerWidth;\n\n  const groupRows = (images, layout) => {\n    // Default layout, one img per row\n    if (!layout) return images.map((img) => [img]);\n    // Otherwise, chunk into rows according to layout scheme\n    let i = 0;\n    const rows = [];\n    for (const rowLength of layout.rows) {\n      const row = [];\n      for (const imgI of [...Array(rowLength).keys()]) {\n        row.push(images[imgI + i]);\n      }\n      rows.push(row);\n      i += rowLength;\n    }\n    return rows;\n  };\n  // Sort so breakpoints always descend\n  $: layouts.sort((a, b) => (a.breakpoint < b.breakpoint ? 1 : -1));\n  $: layout = layouts.find(\n    (l) =>\n      // Must have valid rows schema, i.e., adds to the total number of images\n      l.rows.reduce((a, b) => a + b, 0) === images.length &&\n      // Breakpoint is higher than container width\n      (containerWidth || 0) >= l.breakpoint\n  );\n  $: rows = groupRows(images, layout);\n</script>\n\n<Block width=\"{width}\" id=\"{id}\" cls=\"photopack {cls}\">\n  <div class=\"photopack-container\" bind:clientWidth=\"{containerWidth}\">\n    {#each rows as row, ri}\n      <div\n        class=\"photopack-row\"\n        style:gap=\"0 {gap}px\"\n        style:margin-bottom=\"{gap + 'px'}\"\n      >\n        {#each row as img, i}\n          <figure aria-labelledby=\"{id}-figure-{ri}-{i}\">\n            <img\n              src=\"{img.src}\"\n              alt=\"{img.altText}\"\n              style:max-height=\"{img.maxHeight ? img.maxHeight + 'px' : ''}\"\n            />\n            {#if !img.altText}\n              <div class=\"alt-warning\">altText</div>\n            {/if}\n          </figure>\n        {/each}\n      </div>\n    {/each}\n  </div>\n  <PaddingReset containerIsFluid=\"{width === 'fluid'}\">\n    <Block width=\"{captionWidth}\">\n      <div class=\"captions-container\">\n        {#each rows as row, ri}\n          {#each row as img, i}\n            {#if img.caption}\n              <div id=\"{id}-figure-{ri}-{i}\" class=\"caption\">\n                {@html marked(img.caption)}\n              </div>\n            {/if}\n          {/each}\n        {/each}\n      </div>\n    </Block>\n  </PaddingReset>\n</Block>\n\n<style lang=\"scss\">\n  @import '../../scss/fonts/variables';\n  @import '../../scss/colours/thematic/tr';\n\n  div.photopack-container {\n    display: block;\n    width: 100%;\n    margin-bottom: 10px;\n    div.photopack-row {\n      display: flex;\n      justify-content: space-between;\n      figure {\n        flex: 1;\n        margin: 0;\n        padding: 0;\n        position: relative;\n        img {\n          margin: 0;\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n        div.alt-warning {\n          font-family: $font-family-display;\n          padding: 5px 10px;\n          background-color: red;\n          color: white;\n          position: absolute;\n          top: 0;\n          right: 0;\n          font-size: 14px;\n          line-height: 16px;\n        }\n      }\n    }\n  }\n\n  div.captions-container {\n    div.caption {\n      margin: 0 0 0.6rem;\n      &:last-of-type {\n        margin-bottom: 0;\n      }\n      :global(p) {\n        font-size: 0.85rem;\n        line-height: 1.1rem;\n        font-family: var(--theme-font-family-note, $font-family-display);\n        color: var(--theme-colour-text-secondary, $tr-medium-grey);\n        margin: 0;\n        font-weight: 300;\n      }\n    }\n  }\n</style>\n","import urlJoin from 'proper-url-join';\n\ninterface BlockImage {\n  Src: string;\n  AltText: string;\n  Caption?: string;\n  MaxHeight?: string;\n}\n\ninterface BlockLayout {\n  Breakpoint: string;\n  Rows: string;\n}\n\ninterface Block {\n  Type: string;\n  ID?: string;\n  Class?: string;\n  Width: string;\n  CaptionWidth?: string;\n  Gap?: string;\n  Images: BlockImage[],\n  Layouts: BlockLayout[],\n}\n\nexport const getPhotoPackPropsFromDoc = (docBlock: Block, assetsPath: string = '') => {\n  return {\n    id: docBlock.ID,\n    cls: docBlock.Class,\n    width: docBlock.Width,\n    captionWidth: docBlock.CaptionWidth,\n    gap: docBlock.Gap && isNaN(docBlock.Gap as any) ? null : parseInt(docBlock.Gap),\n    images: docBlock.Images.map((img) => ({\n      src: /^https?:\\/\\/|^\\/\\//i.test(img.Src) ? img.Src : urlJoin(assetsPath, img.Src),\n      altText: img.AltText,\n      caption: img.Caption,\n      maxHeight: img.MaxHeight && isNaN(img.MaxHeight as any) ? null : parseFloat(img.MaxHeight),\n    })),\n    layouts: docBlock.Layouts.map((layout) => ({\n      breakpoint: isNaN(layout.Breakpoint as any) ? null : parseFloat(layout.Breakpoint),\n      rows: layout.Rows.split(',').map(r => parseInt(r.trim())),\n    })),\n  };\n};\n","<script>\n  import { Meta, Template, Story } from '@storybook/addon-svelte-csf';\n\n  // @ts-ignore\n  import componentDocs from './stories/docs/component.md?raw';\n  // @ts-ignore\n  import quickitDocs from './stories/docs/quickit.md?raw';\n  // @ts-ignore\n  import missingAltTextDocs from './stories/docs/missingAltText.md?raw';\n\n  import PhotoPack from './PhotoPack.svelte';\n  import { getPhotoPackPropsFromDoc } from './docProps';\n\n  import { withComponentDocs, withStoryDocs } from '$docs/utils/withParams.js';\n\n  const metaProps = {\n    ...withComponentDocs(componentDocs),\n    argTypes: {\n      width: {\n        control: 'select',\n        options: ['normal', 'wide', 'wider', 'widest', 'fluid'],\n      },\n      captionWidth: {\n        control: 'select',\n        options: ['normal', 'wide', 'wider', 'widest', 'fluid'],\n      },\n    },\n  };\n\n  const defaultImages = [\n    {\n      src: 'https://via.placeholder.com/1024x768.jpg',\n      altText: 'alt text',\n      caption:\n        'A residential building destroyed by shelling in the settlement of Borodyanka in the Kyiv region, Ukraine March 3, 2022. Picture taken with a drone. REUTERS/Maksim Levin',\n      maxHeight: 400,\n    },\n    {\n      src: 'https://via.placeholder.com/1640x1180.jpg',\n      altText: 'alt text',\n      caption:\n        'Surveillance footage shows a missile hitting a residential building in Kyiv, Ukraine, February 26, 2022, in this still image taken from a video obtained by REUTERS',\n    },\n    {\n      src: 'https://via.placeholder.com/1200x900.jpg',\n      altText: 'alt text',\n      caption:\n        'People walk past the remains of a missile at a bus terminal in Kyiv, Ukraine March 4, 2022. REUTERS/Valentyn Ogirenko',\n    },\n    {\n      src: 'https://via.placeholder.com/1024x768.jpg',\n      altText: 'alt text',\n      caption:\n        'People walk past the remains of a missile at a bus terminal. REUTERS/Valentyn Ogirenko',\n    },\n  ];\n\n  const defaultLayouts = [\n    { breakpoint: 450, rows: [1, 2, 1] },\n    { breakpoint: 750, rows: [1, 3] },\n  ];\n\n  const quickItBlock = {\n    Type: 'photo-pack',\n    ID: 'my-photo-pack',\n    Class: 'mb-2',\n    Width: 'wide',\n    CaptionWidth: 'normal',\n    Gap: '10',\n    Images: [\n      {\n        Src: 'https://via.placeholder.com/1024x768.jpg',\n        AltText: 'alt text',\n        Caption: 'Lorem ipsum. Reuters/Photog',\n        MaxHeight: '600',\n      },\n      {\n        Src: 'https://via.placeholder.com/1024x768.jpg',\n        AltText: 'alt text',\n        Caption: 'Lorem ipsum. Reuters/Photog',\n      },\n      {\n        Src: 'https://via.placeholder.com/1024x768.jpg',\n        AltText: 'alt text',\n        Caption: 'Lorem ipsum. Reuters/Photog',\n      },\n      {\n        Src: 'https://via.placeholder.com/1024x768.jpg',\n        AltText: 'alt text',\n        Caption: 'Lorem ipsum. Reuters/Photog',\n      },\n      {\n        Src: 'https://via.placeholder.com/1024x768.jpg',\n        AltText: 'alt text',\n        Caption: 'Lorem ipsum. Reuters/Photog',\n      },\n    ],\n    Layouts: [\n      { Breakpoint: '750', Rows: '2,3' },\n      { Breakpoint: '450', Rows: '1, 2, 2' },\n    ],\n  };\n\n  const altTextImages = [\n    {\n      src: 'https://via.placeholder.com/1024x768.jpg',\n      altText: 'alt text',\n      caption:\n        'A residential building destroyed by shelling in the settlement of Borodyanka in the Kyiv region, Ukraine March 3, 2022. Picture taken with a drone. REUTERS/Maksim Levin',\n      maxHeight: 400,\n    },\n    {\n      src: 'https://via.placeholder.com/1640x1180.jpg',\n      altText: '',\n      caption:\n        'Surveillance footage shows a missile hitting a residential building in Kyiv, Ukraine, February 26, 2022, in this still image taken from a video obtained by REUTERS',\n    },\n  ];\n  const altTextLayouts = [{ breakpoint: 450, rows: [2] }];\n</script>\n\n<Meta title=\"Components/PhotoPack\" component=\"{PhotoPack}\" {...metaProps} />\n\n<Template let:args>\n  <PhotoPack {...args} />\n</Template>\n\n<Story\n  name=\"Default\"\n  args=\"{{\n    width: 'wide',\n    captionWidth: 'normal',\n    images: defaultImages,\n    layouts: defaultLayouts,\n  }}\"\n/>\n\n<Story\n  name=\"🚀 QUICKIT\"\n  {...withStoryDocs(quickitDocs)}\n  args=\"{getPhotoPackPropsFromDoc(quickItBlock)}\"\n/>\n\n<Story\n  name=\"Missing altText\"\n  args=\"{{\n    width: 'wide',\n    captionWidth: 'normal',\n    images: altTextImages,\n    layouts: altTextLayouts,\n  }}\"\n  {...withStoryDocs(missingAltTextDocs)}\n/>\n"],"names":["componentDocs","quickitDocs","missingAltTextDocs","insert","target","div","anchor","if_block","ctx","create_if_block_1","src_url_equal","img","img_src_value","attr","img_alt_value","set_style","figure","append","dirty","i","marked","html_tag","raw_value","create_if_block","paddingreset_changes","images","$$props","layouts","gap","random4","id","cls","width","captionWidth","containerWidth","groupRows","layout","rows","rowLength","row","imgI","a","b","l","getPhotoPackPropsFromDoc","docBlock","assetsPath","urlJoin","r","PhotoPack","withStoryDocs","get_spread_object","withComponentDocs"],"mappings":"siBAAA,MAAecC0GDC,EAAqCC,EAAAC,EAAAC,CAAA,gDADjCC,EAAA,CAAAC,MAAI,SAAOC,EAAA,qDAJTC,EAAAC,EAAA,IAAAC,EAAAJ,MAAI,GAAG,GAAAK,EAAAF,EAAA,MAAAC,CAAA,EACPC,EAAAF,EAAA,MAAAG,EAAAN,MAAI,OAAO,+BACEO,EAAAJ,EAAA,aAAAH,MAAI,UAAYA,EAAG,EAAA,EAAC,UAAY,KAAO,EAAE,0BAJtCA,EAAE,CAAA,EAAA,WAAUA,EAAE,EAAA,EAAA,IAAGA,EAAC,EAAA,CAAA,uCAA5CL,EASQC,EAAAY,EAAAV,CAAA,EARNW,EAICD,EAAAL,CAAA,gCAHOO,EAAA,IAAA,CAAAR,EAAAC,EAAA,IAAAC,EAAAJ,MAAI,GAAG,gBACPU,EAAA,IAAAJ,KAAAA,EAAAN,MAAI,6BACSO,EAAAJ,EAAA,aAAAH,MAAI,UAAYA,EAAG,EAAA,EAAC,UAAY,KAAO,EAAE,EAExDA,MAAI,oEANcA,EAAE,CAAA,EAAA,WAAUA,EAAE,EAAA,EAAA,IAAGA,EAAC,EAAA,mFAJhCA,EAAG,CAAA,QAGVA,EAAG,EAAA,uBAAR,OAAIW,GAAA,4IAFgBJ,EAAAV,EAAA,gBAAAG,KAAM,IAAI,UAHlCL,EAiBKC,EAAAC,EAAAC,CAAA,6EAZIE,EAAG,EAAA,oBAAR,OAAIW,GAAA,EAAA,8GAAJ,wBAHYX,EAAG,CAAA,0BACKO,EAAAV,EAAA,gBAAAG,KAAM,IAAI,kDAwBjBY,EAAOZ,EAAG,EAAA,EAAC,OAAO,EAAA,iEADjBA,EAAE,CAAA,EAAA,WAAUA,EAAE,EAAA,EAAA,IAAGA,EAAC,EAAA,CAAA,+CAA5BL,EAEKC,EAAAC,EAAAC,CAAA,uCADIc,EAAOZ,EAAG,EAAA,EAAC,OAAO,EAAA,KAAAa,EAAA,EAAAC,CAAA,cADjBd,EAAE,CAAA,EAAA,WAAUA,EAAE,EAAA,EAAA,IAAGA,EAAC,EAAA,qDADzBD,EAAAC,MAAI,SAAOe,GAAAf,CAAA,kEAAXA,MAAI,2HADJA,EAAG,EAAA,uBAAR,OAAIW,GAAA,6JAACX,EAAG,EAAA,oBAAR,OAAIW,GAAA,EAAA,0HAAJ,sDADGX,EAAI,CAAA,uBAAT,OAAIW,GAAA,uIADRhB,EAUKC,EAAAC,EAAAC,CAAA,sEATIE,EAAI,CAAA,oBAAT,OAAIW,GAAA,EAAA,kHAAJ,oFAFSX,EAAY,CAAA,0HAAZA,EAAY,CAAA,mKAtBpBA,EAAI,CAAA,uBAAT,OAAIW,GAAA,2CAqByB,iBAAAX,OAAU,6MAtB3CL,EAqBKC,EAAAC,EAAAC,CAAA,mHApBIE,EAAI,CAAA,oBAAT,OAAIW,GAAA,EAAA,iHAAJ,kBAqB6BD,EAAA,IAAAM,EAAA,iBAAAhB,OAAU,0NAvB9BA,EAAK,CAAA,KAAQA,EAAE,CAAA,mBAAmBA,EAAG,CAAA,2HAArCA,EAAK,CAAA,cAAQA,EAAE,CAAA,4BAAmBA,EAAG,CAAA,gKA9EvC,OAAAiB,EAAM,EAAA,EAAAC,GAUN,QAAAC,EAAO,EAAA,EAAAD,EAKP,CAAA,IAAAE,EAAM,EAAE,EAAAF,EAEb,MAAAG,MACJ,KAAK,OAAO,EAAI,KAAK,OAAY,GAAA,KAAO,EACrC,SAAS,EAAE,EACX,UAAU,CAAC,EAKL,GAAA,CAAA,GAAAC,EAAa,aAAeD,IAAYA,EAAO,CAAA,EAAAH,EAK/C,CAAA,IAAAK,EAAc,EAAE,EAAAL,EAKhB,CAAA,MAAAM,EAAwB,QAAQ,EAAAN,EAOhC,CAAA,aAAAO,EAA+B,QAAQ,EAAAP,EAM9CQ,QAEEC,EAAS,CAAIV,EAAQW,IAAM,CAE1B,GAAA,CAAAA,SAAeX,EAAO,IAAKd,IAASA,CAAG,CAAA,EAExC,IAAAQ,EAAI,QACFkB,EAAI,CAAA,YACCC,KAAaF,EAAO,KAAI,OAC3BG,EAAG,CAAA,EACE,UAAAC,IAAY,CAAA,GAAA,MAAMF,CAAS,EAAE,KAAI,CAAA,EAC1CC,EAAI,KAAKd,EAAOe,EAAOrB,CAAC,CAAA,EAE1BkB,EAAK,KAAKE,CAAG,EACbpB,GAAKmB,SAEAD,gBAe2CH,EAAc,KAAA,kRAZ/DP,EAAQ,KAAM,CAAAc,EAAGC,IAAOD,EAAE,WAAaC,EAAE,WAAa,IAAM,sBAC5DN,EAAST,EAAQ,KACjBgB,GAECA,EAAE,KAAK,OAAM,CAAEF,EAAGC,IAAMD,EAAIC,EAAG,CAAC,IAAMjB,EAAO,SAE5CS,GAAkB,IAAMS,EAAE,UAAU,CAAA,sBAEtCN,EAAOF,EAAUV,EAAQW,CAAM,CAAA;;+PC9D7B,MAAMQ,GAA2B,CAACC,EAAiBC,EAAqB,MACtE,CACL,GAAID,EAAS,GACb,IAAKA,EAAS,MACd,MAAOA,EAAS,MAChB,aAAcA,EAAS,aACvB,IAAKA,EAAS,KAAO,MAAMA,EAAS,GAAU,EAAI,KAAO,SAASA,EAAS,GAAG,EAC9E,OAAQA,EAAS,OAAO,IAAKlC,IAAS,CACpC,IAAK,sBAAsB,KAAKA,EAAI,GAAG,EAAIA,EAAI,IAAMoC,GAAQD,EAAYnC,EAAI,GAAG,EAChF,QAASA,EAAI,QACb,QAASA,EAAI,QACb,UAAWA,EAAI,WAAa,MAAMA,EAAI,SAAgB,EAAI,KAAO,WAAWA,EAAI,SAAS,CAAA,EACzF,EACF,QAASkC,EAAS,QAAQ,IAAKT,IAAY,CACzC,WAAY,MAAMA,EAAO,UAAiB,EAAI,KAAO,WAAWA,EAAO,UAAU,EACjF,KAAMA,EAAO,KAAK,MAAM,GAAG,EAAE,IAAIY,GAAK,SAASA,EAAE,KAAM,CAAA,CAAC,CAAA,EACxD,CAAA,mCCmFWxC,EAAI,CAAA,CAAA,qJAAJA,EAAI,CAAA,CAAA,CAAA,CAAA,yLAH0ByC,CAAS,EAAOzC,EAAS,CAAA,+MASpE,MAAO,OACP,aAAc,SACd,OAAQA,EAAa,CAAA,EACrB,QAASA,EAAc,CAAA,mCAMrB0C,EAAcjD,CAAW,GACtB,KAAA2C,GAAyBpC,EAAY,CAAA,CAAA,iHAM1C,MAAO,OACP,aAAc,SACd,OAAQA,EAAa,CAAA,EACrB,QAASA,EAAc,CAAA,IAErB0C,EAAchD,CAAkB,8UA9BS+C,CAAS,SAAOzC,EAAS,CAAA,CAAA,+FAkBlEU,EAAA,GAAAiC,EAAAD,EAAcjD,CAAW,CAAA,QACtB,KAAA2C,GAAyBpC,EAAY,CAAA,CAAA,sDAM1C,MAAO,OACP,aAAc,SACd,OAAQA,EAAa,CAAA,EACrB,QAASA,EAAc,CAAA,IAErBU,EAAA,GAAAiC,EAAAD,EAAchD,CAAkB,CAAA,2UAxIrB,CACV,GAAAkD,GAAkBpD,EAAa,EAClC,SAAQ,CACN,MAAK,CACH,QAAS,SACT,QAAO,CAAG,SAAU,OAAQ,QAAS,SAAU,OAAO,GAExD,aAAY,CACV,QAAS,SACT,QAAO,CAAG,SAAU,OAAQ,QAAS,SAAU,OAAO,KAKzC,EAEf,IAAK,2CACL,QAAS,WACT,QACE,2KACF,UAAW,MAGX,IAAK,4CACL,QAAS,WACT,QACE,wKAGF,IAAK,2CACL,QAAS,WACT,QACE,0HAGF,IAAK,2CACL,QAAS,WACT,QACE,2FAIc,CAAA,CAChB,WAAY,IAAK,KAAI,CAAG,EAAG,EAAG,CAAC,CAAA,EAAA,CAC/B,WAAY,IAAK,KAAI,CAAG,EAAG,CAAC,CAAA,CAAA,EAGd,CAChB,KAAM,aACN,GAAI,gBACJ,MAAO,OACP,MAAO,OACP,aAAc,SACd,IAAK,KACL,OAAM,EAEF,IAAK,2CACL,QAAS,WACT,QAAS,8BACT,UAAW,QAGX,IAAK,2CACL,QAAS,WACT,QAAS,gCAGT,IAAK,2CACL,QAAS,WACT,QAAS,gCAGT,IAAK,2CACL,QAAS,WACT,QAAS,gCAGT,IAAK,2CACL,QAAS,WACT,QAAS,gCAGb,QACI,CAAA,CAAA,WAAY,MAAO,KAAM,OAAK,CAC9B,WAAY,MAAO,KAAM,SAAS,CAAA,GAIrB,EAEf,IAAK,2CACL,QAAS,WACT,QACE,2KACF,UAAW,MAGX,IAAK,4CACL,QAAS,GACT,QACE,0KAGoB,WAAY,IAAK,MAAO,CAAC,CAAA,CAAA"}