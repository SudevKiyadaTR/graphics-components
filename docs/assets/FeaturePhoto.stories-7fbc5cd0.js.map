{"version":3,"file":"FeaturePhoto.stories-7fbc5cd0.js","sources":["../../src/components/FeaturePhoto/stories/docs/component.md?raw","../../src/components/FeaturePhoto/stories/docs/quickit.md?raw","../../src/components/FeaturePhoto/stories/docs/missingAltText.md?raw","../../src/components/FeaturePhoto/FeaturePhoto.svelte","../../src/components/FeaturePhoto/stories/shark.jpg","../../src/components/FeaturePhoto/FeaturePhoto.stories.svelte"],"sourcesContent":["export default \"A full-width photo inside the text well.\\n\\n```html\\n<script>\\n  import { FeaturePhoto } from '@reuters-graphics/graphics-components';\\n  import { assets } from '$app/paths'; // ðŸ‘ˆ If using in the Graphics Kit...\\n</script>\\n\\n<FeaturePhoto\\n  src=\\\"{`${assets}/images/myImage.jpg`}\\\"\\n  altText=\\\"Some alt text\\\"\\n  caption=\\\"A caption\\\"\\n  lazy=\\\"{false}\\\"\\n  width=\\\"normal\\\"\\n/>\\n```\\n\"","export default \"An example of using `FeaturePhoto` in the Graphics Kit with a Google Doc.\\n\\n```yaml\\n# Google doc block\\nType: photo\\nWidth: normal\\nSrc: images/shark.jpg\\nAltText: The king of the sea\\nCaption: Carcharodon carcharias - REUTERS\\n```\\n\\n```html\\n<!-- App.svelte -->\\n<script>\\n  // Add FeaturePhoto to imports from graphics-components\\n  import { FeaturePhoto } from '@reuters-graphics/graphics-components';\\n\\n  // These should be already imported for you.\\n  import content from '$locales/en/content.json';\\n  import { assets } from '$app/paths';\\n</script>\\n\\n{#each content.blocks as block} {#if block.Type === 'text'}\\n<!-- ... other blocks -->\\n\\n<!-- Copy/paste into your blocks loop! -->\\n{:else if block.Type === 'photo'}\\n<FeaturePhoto\\n  width=\\\"{block.Width}\\\"\\n  src=\\\"{`${assets}/${block.Src}`}\\\"\\n  altText=\\\"{block.AltText}\\\"\\n  caption=\\\"{block.Caption}\\\"\\n/>\\n<!-- END copy/paste -->\\n{/if} {/each}\\n```\\n\"","export default \"If your photo is missing `altText` a small warning will overlay the image.\\n\"","<!-- @component `FeaturePhoto` [Read the docs.](https://reuters-graphics.github.io/graphics-components/?path=/docs/components-FeaturePhoto--default) -->\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import Block from '../Block/Block.svelte';\n  import type { ContainerWidth } from '../@types/global';\n  import PaddingReset from '../PaddingReset/PaddingReset.svelte';\n\n  /**\n   * Photo src\n   * @type {string}\n   * @required\n   */\n  export let src: string;\n  /**\n   * Photo altText\n   * @type {string}\n   * @required\n   */\n  export let altText: string;\n  /**\n   * Caption below the photo\n   * @type {string}\n   */\n  export let caption: string;\n  /**\n   * Height of the photo placeholder when lazy-loading\n   */\n  export let height: number = 100;\n  /**\n   * Width of the container, one of: normal, wide, wider, widest or fluid\n   */\n  export let width: ContainerWidth = 'normal';\n  /**\n   * Whether to lazy load the photo using the [Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\n   */\n  export let lazy: boolean = false;\n  /** Set Intersection Observer [rootMargin](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#rootmargin) `top` when lazy loading. */\n  export let top = 0;\n  /** Set Intersection Observer [rootMargin](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#rootmargin) `bottom` when lazy loading. */\n  export let bottom = 0;\n  /** Set Intersection Observer [rootMargin](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#rootmargin) `left` when lazy loading. */\n  export let left = 0;\n  /** Set Intersection Observer [rootMargin](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#rootmargin) `right` when lazy loading. */\n  export let right = 0;\n\n  let intersecting = false;\n  let container;\n  const intersectable = typeof IntersectionObserver !== 'undefined';\n\n  onMount(() => {\n    if (!lazy) return;\n    if (intersectable) {\n      const rootMargin = `${bottom}px ${left}px ${top}px ${right}px`;\n\n      const observer = new IntersectionObserver(\n        (entries) => {\n          intersecting = entries[0].isIntersecting;\n          if (intersecting) {\n            observer.unobserve(container);\n          }\n        },\n        {\n          rootMargin,\n        }\n      );\n\n      observer.observe(container);\n      return () => observer.unobserve(container);\n    }\n  });\n</script>\n\n<Block width=\"{width}\" cls=\"photo\">\n  <figure bind:this=\"{container}\" aria-label=\"media\">\n    {#if !lazy || (intersectable && intersecting)}\n      <img src=\"{src}\" alt=\"{altText}\" />\n    {:else}\n      <div class=\"placeholder\" height=\"{`${height}px`}\"></div>\n    {/if}\n    {#if caption}\n      <PaddingReset containerIsFluid=\"{width === 'fluid'}\">\n        <figcaption>{caption}</figcaption>\n      </PaddingReset>\n    {/if}\n    {#if !altText}\n      <div class=\"alt-warning\">altText</div>\n    {/if}\n  </figure>\n</Block>\n\n<style lang=\"scss\">\n  @import '../../scss/fonts/variables';\n  @import '../../scss/colours/thematic/tr';\n\n  figure {\n    width: 100%;\n    position: relative;\n\n    img {\n      width: 100%;\n      margin: 0;\n    }\n\n    .placeholder {\n      background-color: #ccc;\n      width: 100%;\n    }\n\n    div.alt-warning {\n      font-family: $font-family-display;\n      padding: 5px 10px;\n      background-color: red;\n      color: white;\n      position: absolute;\n      top: 0;\n      right: 0;\n      font-size: 14px;\n      line-height: 16px;\n    }\n\n    figcaption {\n      font-weight: 400;\n      font-size: 0.8rem;\n      font-family: var(--theme-font-family-note, $font-family-display);\n      color: var(--theme-colour-text-secondary, $tr-medium-grey);\n    }\n  }\n</style>\n","export default \"__VITE_ASSET__d597932c__\"","<script>\n  import { Meta, Template, Story } from '@storybook/addon-svelte-csf';\n\n  // @ts-ignore\n  import componentDocs from './stories/docs/component.md?raw';\n  // @ts-ignore\n  import quickitDocs from './stories/docs/quickit.md?raw';\n  // @ts-ignore\n  import missingAltTextDocs from './stories/docs/missingAltText.md?raw';\n\n  import FeaturePhoto from './FeaturePhoto.svelte';\n\n  // @ts-ignore\n  import sharkSrc from './stories/shark.jpg';\n\n  import {\n    withComponentDocs,\n    withStoryDocs,\n  } from '$lib/docs/utils/withParams.js';\n\n  const metaProps = {\n    ...withComponentDocs(componentDocs),\n    argTypes: {\n      width: {\n        control: 'select',\n        options: ['normal', 'wide', 'wider', 'widest', 'fluid'],\n      },\n    },\n  };\n</script>\n\n<Meta\n  title=\"Components/FeaturePhoto\"\n  component=\"{FeaturePhoto}\"\n  {...metaProps}\n/>\n\n<Template let:args>\n  <FeaturePhoto {...args} />\n</Template>\n\n<Story\n  name=\"Default\"\n  args=\"{{\n    src: sharkSrc,\n    altText: 'A shark!',\n    width: 'normal',\n    caption: 'Carcharodon carcharias - REUTERS',\n  }}\"\n/>\n\n<Story\n  name=\"ðŸš€ QUICKIT\"\n  args=\"{{\n    src: sharkSrc,\n    altText: 'A shark!',\n    width: 'normal',\n    caption: 'Carcharodon carcharias - REUTERS',\n  }}\"\n  {...withStoryDocs(quickitDocs)}\n/>\n\n<Story\n  name=\"Missing altText\"\n  args=\"{{\n    src: sharkSrc,\n    width: 'normal',\n    caption: 'Carcharodon carcharias - REUTERS',\n  }}\"\n  {...withStoryDocs(missingAltTextDocs)}\n/>\n"],"names":["componentDocs","quickitDocs","missingAltTextDocs","ctx","insert","target","div","anchor","attr","img","img_src_value","dirty","paddingreset_changes","figcaption","create_if_block_2","create_if_block_1","create_if_block","figure","src","$$props","altText","caption","height","width","lazy","top","bottom","left","right","intersecting","container","intersectable","onMount","rootMargin","observer","entries","$$invalidate","$$value","sharkSrc","FeaturePhoto","withStoryDocs","get_spread_object","withComponentDocs"],"mappings":"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"}